.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_plot_survey.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_examples_plot_survey.py:


===================
Constrain Cosmology
===================

Simulate cosmological constraints
from a sample of lensed SN.

All of these cosmology tools are based on `Coe & Moustakas 2009 <https://arxiv.org/pdf/0906.4108.pdf>`_.
and Dan Coe's `Fisher matrix starter paper <https://arxiv.org/pdf/0906.4123.pdf>`_.

**Creating a Survey**


.. code-block:: default

    import sntd
    import numpy as np








Start by defining your survey parameters. In this case we have a survey called "Test Survey" with
10 lenses with normally distributed lens and source redshifts,
5% lens model uncertainty and 2% time delay uncertainty.


.. code-block:: default


    np.random.seed(3)

    my_survey=sntd.Survey(dTl=5,dTT=2,zl=np.random.normal(.5,.1,size=10),zs=np.random.normal(1.6,.2,size=10),name='Test Survey')








**Gridded Parameter Search**

This will make a smooth contour plot for 2 parameters.


.. code-block:: default


    my_survey.survey_grid(vparam_names=['h','Ode0'],
                          bounds={'h':[.65,.75],'Ode0':[0,1]},npoints=50)

    my_survey.plot_survey_contour(['h','Ode0'],math_labels=[r'$h$',r'$\Omega_\lambda$'],confidence=[.68,.95],alphas=[.9,.4],show_legend=True)




.. image:: /examples/images/sphx_glr_plot_survey_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    No handles with labels found to put in legend.

    <matplotlib.axes._subplots.AxesSubplot object at 0x1a1bd44710>



**MCMC-Like Parameter Search**


.. code-block:: default


    my_survey.survey_nestle(vparam_names=['h','Ode0'],
                          bounds={'h':[.65,.75],'Ode0':[0,1]},npoints=200)

    my_survey.plot_survey_contour(['h','Ode0'],math_labels=[r'$h$',r'$\Omega_\lambda$'],filled=False)




.. image:: /examples/images/sphx_glr_plot_survey_002.png
    :class: sphx-glr-single-img





**Fisher Matrix Analysis**

This will make a 5x5 fisher matrix with the given parameters


.. code-block:: default


    my_survey.survey_fisher(['h','Ode0','Om0','w0','wa'])








Add a prior that assumes perfect knowledge of all other parameters


.. code-block:: default


    my_survey.fisher_matrix.prior('Om0',0.0001)
    my_survey.fisher_matrix.prior('Ode0',0.0001)
    my_survey.fisher_matrix.prior('h',0.0001)
    my_survey.fisher_matrix.plot('w0','wa',x_limits=[-1.7,-.3],y_limits=[-4,4])





.. image:: /examples/images/sphx_glr_plot_survey_003.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Either your color_list is the wrong size or you did not define it, taking defaults...





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  34.477 seconds)


.. _sphx_glr_download_examples_plot_survey.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_survey.py <plot_survey.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_survey.ipynb <plot_survey.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
